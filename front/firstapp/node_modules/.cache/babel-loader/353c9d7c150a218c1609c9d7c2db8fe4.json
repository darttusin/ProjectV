{"ast":null,"code":"import { createEvent, createStore } from 'effector';\nlet mockUsers = [{\n  name: 'PressF',\n  password: \"12345\"\n}, {\n  name: 'PressA',\n  password: \"54321\"\n}, {\n  name: 'PressFK',\n  password: '123456'\n}];\nexport const checkUser = createEvent();\nconst addUser = createEvent(); //generic\n\nexport const $users = createStore(mockUsers);\n$users.watch(status => {\n  console.log(status);\n}); //стор на хранение ссылки\n\nexport const saveUsername = createEvent();\nexport const $currentUsername = createStore('').on(saveUsername, (state, userName) => {\n  return userName;\n});","map":{"version":3,"sources":["C:/Users/PressF/WebstormProjects/for VVIT/firstapp/src/BLL/effector/usersStore.ts"],"names":["createEvent","createStore","mockUsers","name","password","checkUser","addUser","$users","watch","status","console","log","saveUsername","$currentUsername","on","state","userName"],"mappings":"AAAA,SAAsBA,WAAtB,EAAmCC,WAAnC,QAAqD,UAArD;AAUA,IAAIC,SAAiB,GAAG,CAAC;AACrBC,EAAAA,IAAI,EAAE,QADe;AAErBC,EAAAA,QAAQ,EAAE;AAFW,CAAD,EAGrB;AACCD,EAAAA,IAAI,EAAE,QADP;AAECC,EAAAA,QAAQ,EAAE;AAFX,CAHqB,EAMrB;AACCD,EAAAA,IAAI,EAAE,SADP;AAECC,EAAAA,QAAQ,EAAE;AAFX,CANqB,CAAxB;AAYA,OAAO,MAAMC,SAAS,GAAGL,WAAW,EAA7B;AACP,MAAMM,OAAO,GAAGN,WAAW,EAA3B,C,CAEA;;AACA,OAAO,MAAMO,MAAM,GAAGN,WAAW,CAASC,SAAT,CAA1B;AAEPK,MAAM,CAACC,KAAP,CAAaC,MAAM,IAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,CAFD,E,CAGA;;AAEA,OAAO,MAAMG,YAAY,GAAGZ,WAAW,EAAhC;AAIP,OAAO,MAAMa,gBAAgB,GAAGZ,WAAW,CAAC,EAAD,CAAX,CAAgBa,EAAhB,CAC5BF,YAD4B,EACd,CAACG,KAAD,EAAQC,QAAR,KAAqB;AAC/B,SAAOA,QAAP;AACH,CAH2B,CAAzB","sourcesContent":["import {createEffect, createEvent, createStore} from 'effector'\r\nimport {db} from \"../../DAL/firebase/firebaseInit\";\r\nimport {collection, getDocs} from \"firebase/firestore\";\r\n\r\n\r\nexport interface User {\r\n    name: string | null\r\n    password: string | null\r\n}\r\n\r\nlet mockUsers: User[] = [{\r\n    name: 'PressF',\r\n    password: \"12345\"\r\n}, {\r\n    name: 'PressA',\r\n    password: \"54321\"\r\n}, {\r\n    name: 'PressFK',\r\n    password: '123456'\r\n}\r\n]\r\n\r\nexport const checkUser = createEvent<User>()\r\nconst addUser = createEvent<User>()\r\n\r\n//generic\r\nexport const $users = createStore<User[]>(mockUsers)\r\n\r\n$users.watch(status => {\r\n    console.log(status)\r\n})\r\n//стор на хранение ссылки\r\n\r\nexport const saveUsername = createEvent<string>()\r\n\r\n\r\n\r\nexport const $currentUsername = createStore('').on(\r\n    saveUsername, (state, userName) => {\r\n        return userName\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}