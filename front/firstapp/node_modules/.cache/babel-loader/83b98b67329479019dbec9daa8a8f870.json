{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PressF\\\\WebstormProjects\\\\first\\\\firstapp\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recaptcha = require('react-recaptcha'); // specifying your onload callback function\n\n\nconst callback = function () {\n  console.log('Done!!!!');\n};\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: [/*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Recaptcha, {\n      ref: e => recaptchaInstance = e,\n      sitekey: \"xxxxxxxxxxxxxxxxxxxx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetRecaptcha,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 5\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/PressF/WebstormProjects/first/firstapp/src/index.tsx"],"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","Router","Recaptcha","require","callback","console","log","render","e","recaptchaInstance","resetRecaptcha","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;;;AAKA,MAAMC,SAAS,GAAGC,OAAO,CAAC,iBAAD,CAAzB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAG,YAAY;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH,CAFD;;AAIAT,QAAQ,CAACU,MAAT,eACI,QAAC,KAAD,CAAO,UAAP;AAAA,0BAEI,QAAC,MAAD;AAAA,2BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ,eAKI;AAAA,4BACI,QAAC,SAAD;AACI,MAAA,GAAG,EAAEC,CAAC,IAAIC,iBAAiB,GAAGD,CADlC;AAEI,MAAA,OAAO,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AACI,MAAA,OAAO,EAAEE,cADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAkBIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAlBJ,E,CAsBA;AACA;AACA;;AACAb,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport { TextStyled } from './styledComponent/TextStyled';\nimport MainComponent from \"./contentComponents/Main\";\n\n\nconst Recaptcha = require('react-recaptcha');\n\n// specifying your onload callback function\nconst callback = function () {\n    console.log('Done!!!!');\n};\n\nReactDOM.render(\n    <React.StrictMode>\n\n        <Router>\n            <App/>\n        </Router>\n        <div>\n            <Recaptcha\n                ref={e => recaptchaInstance = e}\n                sitekey=\"xxxxxxxxxxxxxxxxxxxx\"\n            />\n            <button\n                onClick={resetRecaptcha}\n            >\n                Reset\n            </button>\n        </div>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}