{"ast":null,"code":"import { createEvent, createStore } from 'effector';\nlet mockUsers = [{\n  name: 'PressF',\n  password: \"12345\"\n}, {\n  name: 'PressA',\n  password: \"54321\"\n}];\nexport const checkUser = createEvent();\nconst addUser = createEvent(); //generic\n\nexport const $users = createStore(mockUsers).on(checkUser, (usersState, user) => {\n  console.log(usersState.some(u => u.name === user.name && u.password === user.password));\n});\n$users.watch(status => {\n  console.log(status);\n});","map":{"version":3,"sources":["C:/Users/PressF/WebstormProjects/first/firstapp/src/BLL/effector/usersStore.ts"],"names":["createEvent","createStore","mockUsers","name","password","checkUser","addUser","$users","on","usersState","user","console","log","some","u","watch","status"],"mappings":"AAAA,SAAsBA,WAAtB,EAAmCC,WAAnC,QAAqD,UAArD;AASA,IAAIC,SAAiB,GAAG,CAAC;AACrBC,EAAAA,IAAI,EAAE,QADe;AAErBC,EAAAA,QAAQ,EAAE;AAFW,CAAD,EAGrB;AACCD,EAAAA,IAAI,EAAE,QADP;AAECC,EAAAA,QAAQ,EAAE;AAFX,CAHqB,CAAxB;AASA,OAAO,MAAMC,SAAS,GAAGL,WAAW,EAA7B;AACP,MAAMM,OAAO,GAAGN,WAAW,EAA3B,C,CAEA;;AACA,OAAO,MAAMO,MAAM,GAAGN,WAAW,CAASC,SAAT,CAAX,CACjBM,EADiB,CACdH,SADc,EACH,CAACI,UAAD,EAAaC,IAAb,KAAkC;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAACI,IAAX,CAAiBC,CAAD,IAAaA,CAAC,CAACX,IAAF,KAAWO,IAAI,CAACP,IAAhB,IAAwBW,CAAC,CAACV,QAAF,KAAeM,IAAI,CAACN,QAAzE,CAAZ;AACH,CAHiB,CAAf;AAKPG,MAAM,CAACQ,KAAP,CAAaC,MAAM,IAAI;AACnBL,EAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACH,CAFD","sourcesContent":["import {createEffect, createEvent, createStore} from 'effector'\r\nimport {db} from \"../../DAL/firebase/firebaseInit\";\r\nimport {collection, getDocs} from \"firebase/firestore\";\r\n\r\ninterface User {\r\n    name: string,\r\n    password: string,\r\n}\r\n\r\nlet mockUsers: User[] = [{\r\n    name: 'PressF',\r\n    password: \"12345\"\r\n}, {\r\n    name: 'PressA',\r\n    password: \"54321\"\r\n},\r\n]\r\n\r\nexport const checkUser = createEvent<User>()\r\nconst addUser = createEvent<User>()\r\n\r\n//generic\r\nexport const $users = createStore<User[]>(mockUsers)\r\n    .on(checkUser, (usersState, user: User): void => {\r\n        console.log(usersState.some((u: User) => u.name === user.name && u.password === user.password))\r\n    })\r\n\r\n$users.watch(status => {\r\n    console.log(status)\r\n})\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}