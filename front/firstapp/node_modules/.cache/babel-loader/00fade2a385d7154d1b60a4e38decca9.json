{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PressF\\\\WebstormProjects\\\\first\\\\firstapp\\\\src\\\\contentComponents\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../App.css';\nimport { TextStyled } from '../styledComponent/TextStyled';\nimport { Checkbox, Input } from 'antd';\nimport { LoginStyled } from \"./Login-styled\";\nimport { UserStyled } from \"./login/User-styled\";\nimport { UserAllStyled } from \"./login/UserAll-styled\";\nimport { PasswordAllStyled } from \"./Password/PasswordAll-styled\";\nimport { ButtonFilledStyled } from '../styledComponent/ButtonFilled-styled';\nimport { ButtonStyled } from '../styledComponent/Button-styled';\nimport { $currentPassword, $currentUsername, $users, savePassword, saveUsername } from \"../BLL/effector/usersStore\";\nimport { useStore } from \"effector-react\";\nimport { rememberUser } from \"../BLL/effector/usersStoreLogined\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const username = useStore($currentUsername);\n  const password = useStore($currentPassword);\n  const mockUsers = useStore($users);\n\n  const handleUsernameChange = e => {\n    saveUsername(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    savePassword(e.target.value);\n  };\n\n  const handleSubmitClick = () => {\n    const existUser = mockUsers === null || mockUsers === void 0 ? void 0 : mockUsers.find(u => u.name === username && u.password === password);\n\n    if (existUser) {\n      rememberUser(existUser);\n    }\n  };\n\n  const isStringValid = string => {\n    /*\r\n      Usernames can only have:\r\n      - Lowercase Letters (a-z)\r\n      - Numbers (0-9)\r\n      - Dots (.)\r\n      - Underscores (_)\r\n    */\n    const res = /^[A-Za-z0-9_\\.]+$/.exec(string);\n    return !!res;\n  };\n\n  return /*#__PURE__*/_jsxDEV(LoginStyled, {\n    children: [/*#__PURE__*/_jsxDEV(UserAllStyled, {\n      children: /*#__PURE__*/_jsxDEV(UserStyled, {\n        valid: isStringValid(username),\n        children: [/*#__PURE__*/_jsxDEV(TextStyled, {\n          textSize: 20,\n          color: 'black',\n          fontWeight: \"bold\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: username,\n          onChange: handleUsernameChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PasswordAllStyled, {\n      children: /*#__PURE__*/_jsxDEV(UserStyled, {\n        valid: isStringValid(password),\n        children: [/*#__PURE__*/_jsxDEV(TextStyled, {\n          textSize: 20,\n          color: 'black',\n          fontWeight: 'bold',\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: 'password',\n          value: password,\n          onChange: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonFilledStyled, {\n      width: 23,\n      height: 30,\n      justifycontent: 'space-between',\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextStyled, {\n        textSize: 17,\n        color: 'black',\n        fontWeight: 'normal',\n        children: \"Remember me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonFilledStyled, {\n      width: 37,\n      height: 30,\n      justifycontent: 'space-between',\n      children: [/*#__PURE__*/_jsxDEV(ButtonStyled, {\n        onClick: isStringValid(password) && isStringValid(username) ? handleSubmitClick : () => {\n          alert(\"not correct username or password\");\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/home\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyled, {\n        children: \"New account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"uYcOLICD69RKgaUL0/ysCxH6Bro=\", false, function () {\n  return [useStore, useStore, useStore];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/PressF/WebstormProjects/first/firstapp/src/contentComponents/Login.tsx"],"names":["React","TextStyled","Checkbox","Input","LoginStyled","UserStyled","UserAllStyled","PasswordAllStyled","ButtonFilledStyled","ButtonStyled","$currentPassword","$currentUsername","$users","savePassword","saveUsername","useStore","rememberUser","Link","Login","username","password","mockUsers","handleUsernameChange","e","target","value","handlePasswordChange","handleSubmitClick","existUser","find","u","name","isStringValid","string","res","exec","alert"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport {TextStyled} from '../styledComponent/TextStyled';\r\nimport {Checkbox, Input} from 'antd';\r\nimport {LoginStyled} from \"./Login-styled\";\r\nimport {UserStyled} from \"./login/User-styled\";\r\nimport {UserAllStyled} from \"./login/UserAll-styled\";\r\nimport {PasswordAllStyled} from \"./Password/PasswordAll-styled\";\r\nimport {ButtonFilledStyled} from '../styledComponent/ButtonFilled-styled';\r\nimport {ButtonStyled} from '../styledComponent/Button-styled';\r\nimport {$currentPassword, $currentUsername, $users, savePassword, saveUsername} from \"../BLL/effector/usersStore\";\r\nimport {useStore} from \"effector-react\";\r\nimport {rememberUser} from \"../BLL/effector/usersStoreLogined\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Login: React.FC = () => {\r\n    const username = useStore($currentUsername)\r\n    const password = useStore($currentPassword)\r\n    const mockUsers = useStore($users)\r\n    const handleUsernameChange = (e: { target: { value: React.SetStateAction<string> } }) => {\r\n        saveUsername(e.target.value as string)\r\n    }\r\n    const handlePasswordChange = (e: { target: { value: React.SetStateAction<string> } }) => {\r\n        savePassword(e.target.value as string)\r\n    }\r\n\r\n    const handleSubmitClick = () => {\r\n        const existUser = mockUsers?.find((u) => u.name === username && u.password === password)\r\n        if (existUser) {\r\n            rememberUser(existUser)\r\n        }\r\n    };\r\n    const isStringValid = (string: string): boolean => {\r\n        /*\r\n          Usernames can only have:\r\n          - Lowercase Letters (a-z)\r\n          - Numbers (0-9)\r\n          - Dots (.)\r\n          - Underscores (_)\r\n        */\r\n        const res = /^[A-Za-z0-9_\\.]+$/.exec(string);\r\n        return !!res;\r\n    }\r\n    return (\r\n        <LoginStyled>\r\n            <UserAllStyled>\r\n                <UserStyled valid={isStringValid(username)}>\r\n                    <TextStyled textSize={20} color={'black'} fontWeight={\"bold\"}>\r\n                        Username\r\n                    </TextStyled>\r\n                    <Input value={username} onChange={handleUsernameChange}/>\r\n                </UserStyled>\r\n            </UserAllStyled>\r\n\r\n            <PasswordAllStyled>\r\n                <UserStyled valid={isStringValid(password)}>\r\n                    <TextStyled textSize={20} color={'black'} fontWeight={'bold'}>\r\n                        Password\r\n                    </TextStyled>\r\n                    <Input type={'password'} value={password} onChange={handlePasswordChange}/>\r\n                </UserStyled>\r\n            </PasswordAllStyled>\r\n\r\n            <ButtonFilledStyled width={23} height={30} justifycontent={'space-between'}>\r\n\r\n                <Checkbox/>\r\n                <TextStyled textSize={17} color={'black'} fontWeight={'normal'}>\r\n                    Remember me\r\n                </TextStyled>\r\n\r\n            </ButtonFilledStyled>\r\n\r\n            <ButtonFilledStyled width={37} height={30} justifycontent={'space-between'}>\r\n\r\n                <ButtonStyled onClick={isStringValid(password) && isStringValid(username) ? handleSubmitClick : () => {\r\n                    alert(\"not correct username or password\")\r\n                }}>\r\n                    <Link to=\"/home\">Submit</Link>\r\n                </ButtonStyled>\r\n                <ButtonStyled>\r\n                    New account\r\n                </ButtonStyled>\r\n\r\n            </ButtonFilledStyled>\r\n\r\n\r\n        </LoginStyled>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}