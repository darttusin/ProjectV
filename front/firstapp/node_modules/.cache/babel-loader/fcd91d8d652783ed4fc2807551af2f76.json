{"ast":null,"code":"import { createEvent, createStore } from 'effector';\nlet mockUsers = [{\n  name: 'PressF',\n  password: \"12345\"\n}, {\n  name: 'PressA',\n  password: \"54321\"\n}];\nexport const checkUser = createEvent();\nconst addUser = createEvent(); //generic\n\nexport const $users = createStore(mockUsers);\n$users.watch(status => {\n  console.log(status);\n}); //наши хэшированые данные юзеров, хранение текущего введенного значения\n\nexport const deleteUserHeh = createEvent();\nexport const deletePasswordHeh = createEvent();\nexport const saveUsername = createEvent();\nexport const $currentUsername = createStore('').on(saveUsername, (state, userName) => {\n  return userName;\n}).on(deleteUserHeh, (state, userName) => {\n  return '';\n});\nexport const savePassword = createEvent();\nexport const $currentPassword = createStore('').on(savePassword, (state, Password) => {\n  return Password;\n}).on(deletePasswordHeh, (state, password) => {\n  return '';\n});\nexport const saveValid = createEvent();\nexport const $saveValidCheckbox = createStore(false).on(saveValid, (state, valid) => {});","map":{"version":3,"sources":["C:/Users/PressF/WebstormProjects/first/firstapp/src/BLL/effector/usersStore.ts"],"names":["createEvent","createStore","mockUsers","name","password","checkUser","addUser","$users","watch","status","console","log","deleteUserHeh","deletePasswordHeh","saveUsername","$currentUsername","on","state","userName","savePassword","$currentPassword","Password","saveValid","$saveValidCheckbox","valid"],"mappings":"AAAA,SAAsBA,WAAtB,EAAmCC,WAAnC,QAAqD,UAArD;AAUA,IAAIC,SAAiB,GAAG,CAAC;AACrBC,EAAAA,IAAI,EAAE,QADe;AAErBC,EAAAA,QAAQ,EAAE;AAFW,CAAD,EAGrB;AACCD,EAAAA,IAAI,EAAE,QADP;AAECC,EAAAA,QAAQ,EAAE;AAFX,CAHqB,CAAxB;AASA,OAAO,MAAMC,SAAS,GAAGL,WAAW,EAA7B;AACP,MAAMM,OAAO,GAAGN,WAAW,EAA3B,C,CAEA;;AACA,OAAO,MAAMO,MAAM,GAAGN,WAAW,CAASC,SAAT,CAA1B;AAEPK,MAAM,CAACC,KAAP,CAAaC,MAAM,IAAI;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,CAFD,E,CAGA;;AAEA,OAAO,MAAMG,aAAa,GAAGZ,WAAW,EAAjC;AACP,OAAO,MAAMa,iBAAiB,GAAGb,WAAW,EAArC;AACP,OAAO,MAAMc,YAAY,GAAGd,WAAW,EAAhC;AAEP,OAAO,MAAMe,gBAAgB,GAAGd,WAAW,CAAC,EAAD,CAAX,CAAgBe,EAAhB,CAC5BF,YAD4B,EACd,CAACG,KAAD,EAAQC,QAAR,KAAqB;AAC/B,SAAOA,QAAP;AACH,CAH2B,EAI3BF,EAJ2B,CAIxBJ,aAJwB,EAIT,CAACK,KAAD,EAAQC,QAAR,KAAqB;AACpC,SAAO,EAAP;AACH,CAN2B,CAAzB;AAQP,OAAO,MAAMC,YAAY,GAAGnB,WAAW,EAAhC;AAEP,OAAO,MAAMoB,gBAAgB,GAAGnB,WAAW,CAAC,EAAD,CAAX,CAAgBe,EAAhB,CAC5BG,YAD4B,EACd,CAACF,KAAD,EAAQI,QAAR,KAAqB;AAC/B,SAAOA,QAAP;AACH,CAH2B,EAI3BL,EAJ2B,CAIxBH,iBAJwB,EAIL,CAACI,KAAD,EAAQb,QAAR,KAAsB;AACzC,SAAO,EAAP;AACH,CAN2B,CAAzB;AAQP,OAAO,MAAMkB,SAAS,GAAGtB,WAAW,EAA7B;AAEP,OAAO,MAAMuB,kBAAkB,GAAGtB,WAAW,CAAC,KAAD,CAAX,CAAmBe,EAAnB,CAC9BM,SAD8B,EACnB,CAACL,KAAD,EAAQO,KAAR,KAAkB,CAE5B,CAH6B,CAA3B","sourcesContent":["import {createEffect, createEvent, createStore} from 'effector'\r\nimport {db} from \"../../DAL/firebase/firebaseInit\";\r\nimport {collection, getDocs} from \"firebase/firestore\";\r\n\r\n\r\nexport interface User {\r\n    name: string | null\r\n    password: string | null\r\n}\r\n\r\nlet mockUsers: User[] = [{\r\n    name: 'PressF',\r\n    password: \"12345\"\r\n}, {\r\n    name: 'PressA',\r\n    password: \"54321\"\r\n},\r\n]\r\n\r\nexport const checkUser = createEvent<User>()\r\nconst addUser = createEvent<User>()\r\n\r\n//generic\r\nexport const $users = createStore<User[]>(mockUsers)\r\n\r\n$users.watch(status => {\r\n    console.log(status)\r\n})\r\n//наши хэшированые данные юзеров, хранение текущего введенного значения\r\n\r\nexport const deleteUserHeh = createEvent()\r\nexport const deletePasswordHeh = createEvent()\r\nexport const saveUsername = createEvent<string>()\r\n\r\nexport const $currentUsername = createStore('').on(\r\n    saveUsername, (state, userName) => {\r\n        return userName\r\n    })\r\n    .on(deleteUserHeh, (state, userName) => {\r\n        return ''\r\n    })\r\n\r\nexport const savePassword = createEvent<string>()\r\n\r\nexport const $currentPassword = createStore('').on(\r\n    savePassword, (state, Password) => {\r\n        return Password\r\n    })\r\n    .on(deletePasswordHeh, (state, password ) => {\r\n        return ''\r\n    })\r\n\r\nexport const saveValid = createEvent<boolean>()\r\n\r\nexport const $saveValidCheckbox = createStore(false).on(\r\n    saveValid, (state, valid) => {\r\n        \r\n    }\r\n)\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}